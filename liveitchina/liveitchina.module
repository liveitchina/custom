<?php
define('DEFAULT_SEARCH_TERM','');
define('LIVEITCHINA_USER_REGISTRATION_LAST_STEP', 2);

global $liveitchina_js_config;

module_load_include('inc', 'liveitchina', 'liveitchina.form_alter');

/**
 * Implementation of hook_init()
 * /
function liveitchina_init() {
  $path = drupal_get_path('module', 'liveitchina');
  drupal_add_js($path . '/js/globals.js', array('weight' => 1));
  drupal_add_js($path . '/js/liveitchina.js', array('group' => 'JS_THEME'));
}//*/

/**
 * Implements hook_field_formatter_info().
 */
function liveitchina_field_formatter_info() {
  return array(
    'taxonomy_term_comma_separated' => array(
      'label' => t('Comma Separated Field'),
      'field types' => array('taxonomy_term_reference'),
    ),
  );
}

function liveitchina_field_formatter_prepare_view($entity_type, $entities, $field, $instances, $langcode, &$items, $displays) {
  return taxonomy_field_formatter_prepare_view($entity_type, $entities, $field, $instances, $langcode, $items, $displays);
}

/**
 * Implements hook_field_formatter_view().
 */
function liveitchina_field_formatter_view ($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();
  $language = i18n_language_interface();

  switch ($display['type']) {
    case 'taxonomy_term_comma_separated':
      $terms = array();
      foreach ($items as $delta => $item) {
        $name = ($item['tid'] != 'autocreate' ? i18n_taxonomy_term_name($item['taxonomy_term'], $language->language): $item['name']);
        $terms[] = check_plain($name);
      }
      $element[] = array(
        '#markup' => implode(', ', $terms),
      );
    break;
  }
  return $element;
}

/**
 * Implements hook_block_info().
 */
function liveitchina_block_info() {
  $blocks['liveitchina_footer'] = array(
    'info' => t('Liveitchina Footer'), //The name that will appear in the block list.
    'cache' => DRUPAL_CACHE_PER_ROLE, //Default
  );
  $blocks['account'] = array(
    'info' => t('My Account'), //The name that will appear in the block list.
    'cache' => DRUPAL_NO_CACHE, //No cache
  );
  $blocks['account_menu'] = array(
    'info' => t('Account Menu'), //The name that will appear in the block list.
    'cache' => DRUPAL_NO_CACHE, //No cache
  );
  $blocks['login_user'] = array(
    'info' => t('Login Module Block'),//The name that will appear in the block list.
    'cache' => DRUPAL_NO_CACHE, //No cache
  );
  $blocks['todays_promotion'] = array(
    'info' => t('Featured promotions'),
    'cache' => DRUPAL_CACHE_PER_PAGE, //No cache
  );
  $block['share_this'] = array(
    'info' => t('Sharethis Footer'),
    'cache'=> DRUPAL_CACHE_PER_PAGE,
  );
  
  return $blocks;
}

/**
 * Implements hook_theme().
 */
function liveitchina_theme($existing, $type, $theme, $path) {
  return array(
    'liveitchina_account' => array(
      'template' => 'liveitchina-account',
      'variables' => array('complete_data' => NULL),
    ),
  );
}


/**
 * Implements hook_block_view().
 * 
 * Prepares the contents of the block.
 */
function liveitchina_block_view($delta = '') {

  switch ($delta) {
    case 'liveitchina_footer':      
      $block['content'] = t('Copyright &copy; 2011 Live it China. All Rights Reserved.');//print_r($footer_menu, true);//render($footer_menu);
      break;
    case 'account':
      $block['content'] = liveitchina_account_block();
      break;
    case 'account_menu':
      $block['content'] = liveitchina_account_menu_block();
      break;
    case 'login_user':
      $block['subject'] = t('Members Login');
      $block['content'] = drupal_get_form('user_login_block');
      break;
    case 'todays_promotion':
      $block['content'] = t('Today\'s Promotions');
      break;
    case 'share_this':
      $block['content'] = '<ul class="share">
        <li>
          <span  class="st_facebook_large"></span>
          <span  class="st_twitter_large"></span>
          <span  class="st_email_large"></span>
          <span  class="st_sina_large"></span>
        </li>
      </ul>
      <div class="push"></div>
      <script type="text/javascript">var switchTo5x=true;</script>
      <script type="text/javascript" src="http://w.sharethis.com/button/buttons.js"></script>
      <script type="text/javascript">stLight.options({publisher:"fc9c6124-783e-462c-b6f2-946cadffd8a3"});</script>';
      break;
  }

  return $block;
}

function liveitchina_account_menu_block(){
  global $user;
  if (!user_is_logged_in()){
    return '';
  }
  $user_fields = profile2_load_by_user($user, 'user');
  
  if ($firstname = field_get_items('profile2', $user_fields, 'field_user_first_name')){
    $firstname = array_pop($firstname);
    $firstname = $firstname['value'];
  } else {
    $firstname = '';
  }
  
  $items = array();
  $items[] = array(
    'data' => l(t('Welcome, ') . $firstname, '', 
      array('fragment' => ' ',
      'external' =>  TRUE,
      'attributes' => array(
      'class' => 'show-menu')
      )),
    'class' => array('dummy'=>'children'),
    'id' => 'display-menu',
    'children' => array(
      l('Account Settings', 'user'),
      l('Privacy Settings', '#'),
      l('Help', '#'),
      l('Log Out', 'user/logout')
    )
  );
  
  $data = theme('item_list',
    array('items' => $items,
      'attributes' => array('class' => array('account-menu'))
    )
  );
  return $data;
}


/**
 * My Account block.
 */
function liveitchina_account_block() {
  global $user;

  $block = '';
  /* data defaults */
  $data = array(
    'uid' => $user->uid,
    'user_picture' => '',
    'user_full_name' => $user->name,
    'user_location' => '',
    'pcp_percentage' => '',
    'user_role' => '',
    'liveitchina_menu' => '',
    'liveitchina_menu_rendered' => '',
  );

  if ($user->uid > 0) {
    $menu = array();
    $user_role = '';
    $pcp_percentage = '';
    
    $user_data = profile2_load_by_user($user, 'user');
    $data['profile_data'] = $user_data;

    $data['user_picture'] = l(_liveitchina_ds_field_user_photo($user, 'thumbnail'),'profile-user/'. $user->uid. '/edit', array('html'=> true));
    //$first_name = field_get_items('profile2', $user_data, 'field_user_first_name');
    $data['user_full_name'] = '';//$first_name[0]['value'];

    if (isset($user_data->field_city['und'][0]['tid'])){
      $user_location = taxonomy_term_load($user_data->field_city['und'][0]['tid']);
      $data['user_location'] = ($user_location)?$user_location->name:'';
    }
    $pcp_percentage = pcp_get_complete_percentage_data('profile2', 'user', $user);
    $data['pcp_percentage'] = theme('pcp_template', $pcp_percentage);
    $menu[] = array(
      'data' => l(t('My Profile'), 'profile-user/'. $user->uid),
      'class' => array('leaf'),
    );
    $menu[] = array(
        'data' => l(t('Account Settings'), 'user/'. $user->uid . '/edit'),
        'class' => array('leaf'),
    );
    /*
    $menu[] = array(
      'data' => l(t('Edit my account'), 'user/' . $user->uid . '/edit'),
      'class' => array('leaf'),
    );
    */
    $count_msg = privatemsg_unread_count();
    if ($count_msg > 0) {
      $inbox_msg =  format_plural($count_msg, 'Inbox (1 message)', 'Inbox (@count messages)');
    }
    else {
      $inbox_msg = t('Inbox');
    }
    $menu[] = array(
      'data' => l($inbox_msg, 'messages'),
      'class' => array('leaf'),
    );
    $menu[] = array(
      'data' => l(t('My Connections'), "user/$user->uid/connections"),
      'class' => array('leaf','collapsible'),
      'children' => array(
        l(t('Sent Requests'), "user/{$user->uid}/connections/sent"),
        l(t('Pending Requests'), "user/{$user->uid}/connections/received"),
      ),
    );
    $menu[] = array(
        'data' => l(t('My Reviews'), "user/$user->uid/reviews/my-review"),
        'class' => array('leaf'),
    );
    
    $menu[] = array(
      'data' => l(t('My Promotions'), 'promotions'),
      'class' => array('leaf'),
    );
    
    $menu[] = array(
      'data' => l(t('Bookmarks'), 'bookmarks'),
      'class' => array('leaf'),
    );

    $data['liveitchina_menu'] = $menu;
    $data['liveitchina_menu_rendered'] = theme('item_list', array('items' => $menu, 'attributes' => array('class' => array('menu'))));
  }
  return theme('liveitchina_account', $data);
}

function _liveitchina_location(){
  $machine_name = 'liveitchina_city';
  $v = taxonomy_vocabulary_machine_name_load($machine_name);
  $options['all'] = t('All');
  
  $terms = taxonomy_get_tree($v->vid, 0, 1);
  foreach ($terms as $term) {
    $opt_query = array ('f' => array('city:'.$term->tid));
    $options[serialize($opt_query)] = $term->name;
  }
  return $options;
}

function liveitchina_ds_field_theme_functions_info() {
  return array('theme_liveit_list_field' => t('List comma separated'));
}


function theme_liveit_list_field($variables) {
  $output = '';

  $config = $variables['ds-config'];

  // Add a simple wrapper.
  $output .= '<div class="field-label-inline field field-name-' . strtr($variables['element']['#field_name'], '_', '-') . ' clearfix">';

  // Render the label.
  if (!$variables['label_hidden']) {
    $output .= '<div class="field-label label-' . $variables['element']['#label_display'] . '">' . $variables['label'];
    if (!isset($config['lb-col'])) {
      $output .= ':&nbsp;';
    }
    $output .= '</div>';
  }

  // Render the items.
  $items = array();
  foreach ($variables['items'] as $item) {
    $items[]= drupal_render($item);
  }
  if ($items) {
    $output .= '<div class="field-items">';
    $output .= implode(', ', $items);
    $output .= '</div>';
  }
  $output .="</div>";

  return $output;
}
//*/
 /**
 * Implements hook_node_view().
 */
function liveitchina_node_view($node, $view_mode, $langcode) {
  if (isset($node->content['my_additional_field'])){
    $node->content['my_additional_field']['#prefix'] = '<div class="sharethis-button">';
    $node->content['my_additional_field']['#suffix'] = '</div>';
  }
}

function _liveitchina_ds_field_user_profile_name($field){
  $data = user_load($field['entity']->uid);
  return $data->realname;
}

function _liveitchina_ds_sharethis($field){
  $content = '<div class="liveitchina-sharethis-link">'.l('Share This', $_GET['q'], array(
    'attributes' => array('class'=>array('liveitchina-sharethis')),
  ));
  $content .= sharethis_block_contents();
  $content .= '</div>';

  return $content;
}
/**
 * Implements hook_user_insert().
 */
function liveitchina_user_insert(&$edit, &$account, $category = NULL) {
  $profile_partner = profile2_create(array('user' => $account, 'type' => 'exchange_partner'));
  profile2_save($profile_partner);

  $profile_tutor = profile2_create(array('user' => $account, 'type' => 'tutor'));
  profile2_save($profile_tutor);
  
  $profile = profile2_create(array('user' => $account, 'type' => 'user'));
  $profile->field_user_first_name['und'][0]['value'] = $account->first_name;
  $profile->field_user_last_name['und'][0]['value'] = $account->last_name;
  profile2_save($profile);
}

/**
 * Implements hook_entity_info_alter().
 */
function liveitchina_entity_info_alter(&$entity_info) {
  $entity_info['profile2']['view modes']['promotions'] = array(
    'label' => t('Promotions'),
    'custom settings' => TRUE,
  ); 
  
  $entity_info['node']['view modes']['custom_teaser'] = array(
      'label' => t('Custom Teaser'),
      'custom settings' => TRUE,
  );
}

/**
 * Implements hook_preprocess_node()
 */
function liveitchina_preprocess_node(&$vars) {
  $node = $vars['node'];
  $vars['theme_hook_suggestions'][] = 'node__' . $node->type;
  $vars['theme_hook_suggestions'][] = 'node__' . $node->type . '__' . $vars['view_mode'];
  //print_r($vars);
}

/**
 * Implements hook_preprocess_block()
 */
function liveitchina_preprocess_block(&$vars) {
  /*/$block = $vars['block'];
  //print "<h1>$block->bid</h1>";
  
  switch ($block->bid){
    case 'sharethis_block':
      print_r($vars);
      exit;
    break;
  }
  //*/
}

function _liveitchina_ds_page_title($field) {
  return '<h1 id="page-title" class="title">'. t("Today's News and Happenings") .'</h1>';
}

function _liveitchina_ds_submitted_by($field) {
  $node = $field['entity'];
  $user = ($node);
  $real_name = realname_load($user);
  $names = explode(' ', $real_name);
  if ( ($arr = count($names)) > 1){
    $real_name = substr($names[0], 0, 1) . '. ' . $names[$arr-1]; 
  }
  return t('Posted by !AUTHOR, !DATE', array('!AUTHOR'=> $real_name, '!DATE'=> date('F d, Y', $node->created)));
}

/*
 * Compute for the average rating of the profile and save it to the overall rating of the profile.
 */
function liveitchina_cast_review_vote_submit($form, &$form_state) {
  $values = $form_state['values'];
  $entity_id = $values['entity_id'];
  $entity_type = $values['entity_type'];
  $lang = 'und';//$values['language'];
  $total_rating = 0;
  $counter = 1;
  $flag = FALSE;

  while (isset($form_state['values']['field_rating'.$counter][$lang][0]['rating'])){
    $total_rating += $form_state['values']['field_rating'.$counter][$lang][0]['rating'];
    $counter++;
    $flag = TRUE;
  }

  //terminate if no field ratings
  if (!$flag){
    return FALSE;
  }

  $total_rating = $total_rating / ($counter-1);

  $form_state['values']['field_rating'][$lang][0]['rating'] = $total_rating;
  $votes = array(
    'entity_type' => $entity_type,
    'entity_id' => $entity_id,
    'value_type' => 'percent',
    'value' => $total_rating,
  );
  votingapi_add_votes($votes);
  $voting_cache = votingapi_recalculate_results($entity_type, $entity_id, true);
  $total_vote_rate = 0;
  foreach ($voting_cache as $vote){
    if ($vote['function'] == 'average'){
      $total_vote_rate = $vote['value'];
    }
  }
  if ($entity_type == 'profile2'){
    $entity = entity_load($entity_type, array($entity_id));
    $profile = $entity[$entity_id];
    $profile->field_rating[$lang][0]['average'] = $total_vote_rate;
    $profile->save();
  }
  if ($entity_type == 'node'){
    $node = node_load($entity_id);
    $node->field_rating[$lang][0]['average'] = $total_vote_rate;
    //use the node save to trigger the apachesolr indexer
    node_save($node);
    //field_attach_presave($entity_type, $node);
    //field_attach_update($entity_type, $node);
  }
}

/**
 * Process a block search form submission.
 */
function liveitchina_search_box_form_submit($form, &$form_state) {
  if (isset($_GET['destination'])) {
    unset($_GET['destination']);
  }

  if ($form_state['values']['search_block_form'] == '') {
    form_set_error('keys', t('Please enter some keywords.'));
  }

  $form_id = $form['form_id']['#value'];
  $info = search_get_default_module_info();
  $filter = array();

  if ($info) {
    if ($form_state['values']['location'] != 'all'){
      $filter = array('query' => unserialize($form_state['values']['location']));
    }
    $form_state['redirect'] = array('search/' . $info['path'] . '/' . trim($form_state['values'][$form_id]), $filter);
  }
  else {
    form_set_error(NULL, t('Search is currently disabled.'), 'error');
  }
}

function liveitchina_form_webform_client_form_27_alter(&$form, &$form_state, $form_id) {
  $form['actions']['submit']['#prefix'] = '<input class="form-submit webform-cancel" type="button" value="Cancel" onClick="history.go(-1)"/>';
}

function liveitchina_form_user_profile_form_alter(&$form, &$form_state, $form_id){
  $form['picture']['#access'] = false;
}

function liveitchina_form_profile2_edit_user_form_alter(&$form, &$form_state, $form_id) {

  $form['#submit'][] = '_liveitchina_add_picture_to_user';
}

function _liveitchina_add_picture_to_user($form, &$form_state){
  global $user;
  $file = file_load($form_state['profile2']->field_profile_picture['und']['0']['fid']);
  //$account = new stdClass();
  //$account->uid = $user->uid;
  $edit = array();
  $edit['picture'] = $file;
  
  //drupal_set_message(print_r($account,true));
  user_save($user, $edit);
}

/**
 * Ajax handler function that is utilized to display the form
 * in a popup rather than having the full page reload for the users
 */
function liveitchina_user_relationships_ui_request_ajax($requestee) {
  $form = drupal_get_form('liveitchina_user_relationships_ui_request', $requestee);
  if (isset($_GET['ajax'])) {
    print drupal_render($form);
  }
  else {
    return $form;
  }
}

/**
 * Request a new relationship with another user
 */
function liveitchina_user_relationships_ui_request($form, &$form_state, $requestee) {
  global $user;
  $requester = $user;

  drupal_set_title(t('Request relationship'));

  $script = '<script type="text/javascript">setTimeout(\'Drupal.user_relationships_ui.hidePopup()\', 10000);</script>';
  if (empty($requestee->name)) {
    $form['error'] = array(
      '#prefix' => '<div>',
      '#suffix' => '</div>',
      '#markup' => user_relationships_get_message('non_existent_user') . $script
    );
    return $form;
  }
  elseif ($user->uid == $requestee->uid) {
    $form['error'] = array(
      '#prefix' => '<div>',
      '#suffix' => '</div>',
      '#markup' => user_relationships_get_message('self_request') . $script
    );
    return $form;
  }
  elseif (!variable_get('user_relationships_allow_multiple', TRUE) &&
           user_relationships_load(array('between' => array($requester->uid, $requestee->uid)), array('count' => TRUE))) {
    $form['error'] = array(
      '#prefix' => '<div>',
      '#suffix' => '</div>',
      '#markup' => user_relationships_get_message('too_many_relationships') . $script
    );
    return $form;
  }
  // This is the default which means we will display the form
  $form = liveitchina_user_relationships_ui_request_form($requester, $requestee, $form_state);
  if (!isset($form['rtid'])) {
    $data['error'] = array(
      '#prefix' => '<div>',
      '#suffix' => '</div>',
      '#markup' => user_relationships_get_message('too_many_relationships') . $script
    );
    return $data;
  }
  else {
    if ($form['rtid']['#default_value']) {
      $relationship = user_relationships_type_load($form['rtid']['#default_value']);
    }
    // Respect destination param if given.
    if (isset($_GET['destination'])) {
      $dest = $_GET['destination'];
    }
    else {
      $dest = "user/$requestee->uid";
    }
    $form = confirm_form(
      $form,
      t('Request relationship'),
      $dest,
      isset($relationship) ?
      ($relationship->requires_approval
       ? t('Are you sure you want to send a new %rel_name request to !name?', array('%rel_name' => ur_tt("user_relationships:rtid:$relationship->rtid:name", $relationship->name), '%rel_plural_name' => ur_tt("user_relationships:rtid:$relationship->rtid:plural_name", $relationship->plural_name), '!name' => theme('username', array('account' => $requestee))))
       : t("Are you sure you want to become !name's %rel_name?", array('!name' => theme('username', array('account' => $requestee)), '%rel_name' => ur_tt("user_relationships:rtid:$relationship->rtid:name", $relationship->name)))) :
      '',
      t('Send'), t('Cancel'),
      'user_relationships_request_confirm'
    );
    return $form;
  }
}

function liveitchina_user_relationship_ui_request_modal_form($form, &$form_state){
  $requestee = $form_state['requestee'];
  $form = drupal_get_form('liveitchina_user_relationships_ui_request', $requestee);
  
  return $form;
}

function liveitchina_fivestar_widgets() {
  $path = drupal_get_path('module', 'liveitchina');
  $widgets = array();
  $widgets = array(
    $path . '/widget/star/star.css' => 'Star',
  );
  
  return $widgets;
}

function liveitchina_facetapi_map_price($value){
  $cost = array(0 => '' , 1 => '$', 2 => '$$', 3 => '$$$', 4 => '$$$$', 5 => '$$$$$');
  return (array_key_exists($value, $cost))? $cost[$value]: '';
}

function liveitchina_privatemsg_thread_operations_alter(&$operations) {
  $operations['mark as read']['button'] = TRUE;
  $operations['mark as unread']['button'] = TRUE;
  $operations['archive']['button'] = TRUE;
}

function _liveitchina_ds_field_user_photo($field, $style_name ='profile_main') {
  //*
  if (is_array($field)){
    $user = user_load($field['entity']->uid);
  }
  else {
    global $user;
  }

  $user_picture = array(
      'style_name' => $style_name,
      'path' => '',
      'alt' => '',
  );

  //$user_data = profile2_load_by_user($user, 'user');
  if (isset($user->picture) && $user->picture) {
    if ($user->picture){
      $file = file_load($user->picture);
      $user_picture['path'] = $file->uri;
    }
    else {
      $user_picture['path'] = $user->picture->uri;
    }
    $user_picture['alt']  = (isset($user->realname))? $user->realname : $user->name;
    }
    else {
      $avatar = field_info_field('field_user_avatar');
      $file = file_load($avatar['settings']['default_image']);
      $user_picture['path'] = $file->uri;
    }
  return theme('image_style', $user_picture);
  //*/
  //return '';
}

/*
 * Alter Facet Filter Area Block
*/
function liveitchina_block_view_facetapi_VOJ9ksCUAL6pTreW03urQ6m89C59IxTG_alter(&$data, $block) {
  $data['subject'] = t('Division'). ':';
  $hide = TRUE;
  $searchCity = (isset($_GET["f"])) ? $_GET["f"] : array();
  foreach ($searchCity as $city){
    list($searchLabel, $searchValue) = explode(":", $city);
    //display only if the value is HONGKONG;
    if (strtolower($searchLabel) == "city" && $searchValue == 158){
      $hide = FALSE;
    }
  }
  if ($hide){
    unset($data['content']);
  }
}

/*
 * Alter Facet Filter District Block
 */
function liveitchina_block_view_facetapi_wOER33SIuigH29qN7r2xP6n0omobQ4Nf_alter(&$data, $block) {
  $hide =TRUE;
  $data['subject'] = t('District') . ':';
  $searchCity = (isset($_GET["f"])) ? $_GET["f"] : array();
  foreach ($searchCity as $city){
    list($searchLabel, $searchValue) = explode(":", $city);
    if (strtolower($searchLabel) == "city"){
      $hide = FALSE;
    }
  }
  if ($hide){
    unset($data['content']);
  }
}

function liveitchina_block_view_facetapi_3IHTw7DdTZX1DkaTSxdUQpWnwQJGuBIx_alter(&$data, $block) {
  $data['subject'] = t('Language'). ':';
}
function liveitchina_block_view_facetapi_GiIy4zr9Gu0ZSa0bumw1Y9qIIpIDf1wu_alter(&$data, $block) {
  $data['subject'] = t('Method'). ':';
}
function liveitchina_block_view_facetapi_8NiHeeHn1euMEuNXgw3WAb6Qh3uBSQe4_alter(&$data, $block) {
  $data['subject'] = t('Select Location'). ':';
}

function _liveitchina_get_map($address){
  $point = geocoder('google',$address);
  if (!is_object($point)){
    return;
  }
    $geoJSON = $point->out('json');
    $coordinates = json_decode($geoJSON);
    $long = $coordinates->coordinates[0];
    $latitude = $coordinates->coordinates[1];

  $geofield = array(
    'wkt' => 'POINT ('. $long . ' '. $latitude .')',
    'geo_type' => 'point',
    'lat' => $latitude,
    'lon' => $long,
    'top' => $latitude,
    'bottom' => $latitude,
    'right' => $long,
    'left' => $long,
  );
  return $geofield;
}

/*
 * Function to retrieve the information of a single item field
 */
function _liveitchina_field_get_field($entity_type, $entity, $field, $index='value'){
  $value = '';
  if ($field_name = field_get_items($entity_type, $entity, $field)){
    $field_data = array_pop($field_name);
    $value = $field_data[$index];
  }

  return $value;
}

function _liveitchina_price_table($city, $cost = 0){
  if ($city == 0 || $cost == ''){
    return '-';
  }

  $sign = (in_array($city, array(158, 193)))? 'HK': 'RMB';

  $currency = array(
    'HK' => array(
      '0'=> '-',
      '1'=> '$ (0-100 HK$)',
      '2'=> '$$ (101-150 HK$)',
      '3'=> '$$$ (151-250 HK$)',
      '4'=> '$$$$ (251-350 HK$)',
      '5'=> '$$$$$$ (350+ HK$)',
    ),
    'RMB' => array(
      '0'=> '-',
      '1'=> '¥ (0-50 RMB¥)',
      '2'=> '¥¥ (51-100 RMB¥)',
      '3'=> '¥¥¥ (101-150 RMB¥)',
      '4'=> '¥¥¥¥ (151-250 RMB¥)',
      '5'=> '¥¥¥¥¥ (251+ RMB¥)',
    ),
  );
  return $currency[$sign][$cost];
}

function liveitchina_profile_core($profile){
  $name = $profile->field_user_first_name['und'][0]['value'];
  $requestee = $profile->uid;
  $connect_url = "relationship/{$requestee}/request/6";
  $links[] = array(
    'data' => l(t('Send Message'), "messages/new/{$profile->uid}"),
  );
  $links[] = array(
    'data' => l(t('Connect'), $connect_url),
  );
  $links[] = array(
    'data' => l(t("@name's Review", array('@name'=>$name)), "user/{$profile->uid}/reviews"),
  );
  $data = theme('item_list',
    array('items' => $links,
      'attributes' => array(
        'class' => array(
          'user-actions',
          'clearfix'
        ),
      ),
    )
  );
  print $data;
}
/**
 * Implements hook_ds_view_modes_info().
 */
function liveitchina_ds_view_modes_info() {
  $ds_view_modes = array();
  $ds_view_mode = new stdClass;
  $ds_view_mode->disabled = FALSE;
  $ds_view_mode->api_version = 1;
  $ds_view_mode->view_mode = 'my_reviews';
  $ds_view_mode->label = 'My Reviews';
  $ds_view_mode->entities = array(
    'node' => 'node',
    'reply' => 'reply',
    'profile2' => 'profile2',
  );
  $ds_view_modes['my_reviews'] = $ds_view_mode;
  
  return $ds_view_modes;
}

/**
 * Implements hook_hook_info().
 */
function liveitchina_hook_info() {
  $hooks['menu'] = array(
    'group' => 'menu',
  );
  $hooks['menu_alter'] = array(
    'group' => 'menu',
  );
  $hooks['ds_layout_info'] = array(
    'group' => 'ds_fields_info',
  );
  return $hooks;
}

/**
 * Implements theme_preprocess_replies().
 */
function liveitchina_preprocess_replies(&$vars) {
  $vars['reply_form']['#access'] = FALSE;
  $vars['links']['#access']= FALSE;
}

function liveitchina_field_widget_info_alter(&$info) {
  $path = drupal_get_path('module', 'liveitchina');
  $info['stars']['settings']['widget']['fivestar_widget'] = $path . '/widget/star/star.css';
}

/**
 * Request new user to user relationship
 * @param $requester user object for the requesting user
 * @param $requestee user object for the target user
 * @param $form_values array $form['values'] when called from form_alter()
 */
function liveitchina_user_relationships_ui_request_form($requester, $requestee, $form_values = NULL) {
  $relationships = user_relationships_get_requestable_rtypes($requester, $requestee);
  //try to find out desired relationship type
  $default_relationship = NULL;
  if (isset($form_values['rtid'])) {//given through form
    $default_relationship = $form_values['rtid'];
  }
  elseif (is_numeric(arg(3)) && user_relationships_type_load(arg(3))) {//given through URL arguments, e.g. relationship/{uid}/request/{rtid}
    $default_relationship = arg(3);
  }
  elseif (count($relationships) == 1) {//preselect the only one.
    $rtids = array_keys($relationships);
    $default_relationship = $rtids[0];
  }

  //verify default relationship may be requested
  $default_relationship = isset($relationships[$default_relationship]) ? $default_relationship : NULL;

  if (count($relationships)) {
    //hide control if the relationship is chosen
    if ($default_relationship && variable_get('user_relationships_show_direct_links', 1)) {
      $form['rtid'] = array(
        '#type' => 'hidden',
        '#default_value' => $default_relationship,
      );
    }
    else {
      $form['rtid'] = array(
        '#title'          => t('What type of relationship are you requesting with !name?', array('!name' => theme('username', array('account' => $requestee)))),
        '#type'           => 'radios',
        '#options'        => $relationships,
        '#default_value'  => $default_relationship,
      );
    }
  }
  $form['requester'] = array(
    '#type'   => 'value',
    '#value'  => $requester->uid,
  );
  $form['requestee'] = array(
    '#type'   => 'value',
    '#value'  => $requestee->uid,
  );
}

function user_relationships_is_connected($requester, $requestee, $rtid){

  $param = array(
    'requester_id' => $requester,
    'approved'=> TRUE,
    'between' => array($requester, $requestee),
    'rtid'=> array($rtid),
  );

  $ret = user_relationships_load(
             $param,
             array('count' => TRUE));
  return ($ret) ? TRUE: FALSE;
}
