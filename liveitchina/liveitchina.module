<?php
define('DEFAULT_SEARCH_TERM','');
define('LIVEITCHINA_USER_REGISTRATION_LAST_STEP', 2);
define('LIC_TUTOR_REQUEST_LABEL', 'Send Tutor request');
define('LIC_EXPAT_REQUEST_LABEL', 'Send Exchange request');
define('LIC_CONNECTED_REQUEST_LABEL', 'Already connected');

global $liveitchina_js_config;

module_load_include('inc', 'liveitchina', 'liveitchina.form_alter');
module_load_include('inc', 'liveitchina', 'liveitchina.forms');

/**
 * Implementation of hook_init()
 * /
 * 
function liveitchina_init() {
  $path = drupal_get_path('module', 'liveitchina');
  drupal_add_js($path . '/js/globals.js', array('weight' => 1));
  drupal_add_js($path . '/js/liveitchina.js', array('group' => 'JS_THEME'));
}//*/
//*
function liveitchina_init(){
  $path = drupal_get_path('module', 'liveitchina');
  drupal_add_js($path . '/js/feedback.js');
}
//*/
/**
 * Implements hook_field_formatter_info().
 */
function liveitchina_field_formatter_info() {
  return array(
    'taxonomy_term_comma_separated' => array(
      'label' => t('Comma Separated Field'),
      'field types' => array('taxonomy_term_reference'),
    ),
    'geolocation_address' => array(
      'label' => t('Geolocation Address'),
      'field types' => array('geolocation_latlng'),
    ),
    'geolocation_googlemaps_dynamic_text' => array(
      'label' => t('Dynamic GMap with Text'),
      'field types' => array('geolocation_latlng'),
      'settings' => array(
        'map_dimensions' => '300x300',
        'map_zoomlevel' => '7',
        'map_imageformat' => 'png8',
        'map_maptype' => 'roadmap',
        'marker_icon' => '',
        'map_scrollwheel' => FALSE,
      ),
    ),
  );
}

/**
 * Implements hook_field_formatter_settings_form().
 */
function liveitchina_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $display = $instance['display'][$view_mode];
  $type = $display['type'];
  $settings = $display['settings'];
  
  $element = array();
  
  // Implement some configuration options.
  // http://code.google.com/intl/en/apis/maps/documentation/staticmaps/
  $element['map_dimensions'] = array(
    '#type' => 'textfield',
    '#title' => t('Map dimensions'),
    '#description' => t('Enter custom map dimensions, default is 300x300.'),
    '#default_value' => $settings['map_dimensions'],
  );
  $element['marker_icon'] = array(
    '#type' => 'textfield',
    '#title' => t('Marker icon'),
    '#description' => t('Set the path to the icon marker you wish to use. Path can be absolute (wicth http://) or relative to the Drupal instalation. If left blank, the default will be used'),
    '#default_value' => $settings['marker_icon'],
  );
  switch ($type) {
   case 'geolocation_googlemaps_dynamic_text':
    $element['map_scrollwheel'] = array(
    '#type' => 'checkbox',
    '#title' => t('Scroll Zoom'),
    '#description' => t('By default zooming is done with double click and/or using the map controls to avoid interrupting the normal window scroll. It can optionally be enabled here.'),
    '#default_value' => $settings['map_scrollwheel'],
    );
    break;
  }
  
  $element['map_zoomlevel'] = array(
    '#type' => 'select',
    '#title' => t('Zoom level'),
    '#options' => array(
      '1' => '1',
      '2' => '2',
      '3' => '3',
      '4' => '4',
      '5' => '5',
      '6' => '6',
      '7' => '7 (default)',
      '8' => '8',
      '9' => '9',
      '10' => '10',
      '11' => '11',
      '12' => '12',
      '13' => '13',
      '14' => '14',
      '15' => '15',
      '16' => '16',
      '17' => '17',
      '18' => '18',
      '19' => '19',
    ),
    '#description' => t('Choose a custom zoom level - the higher the number the closer. <em>High zoom warning:</em> Google might not return images for any combination of Map Type and Zoom Level.'),
    '#default_value' => $settings['map_zoomlevel'],
  );
  
  return $element;
}

/**
 * Implements hook_field_formatter_settings_summary().
 */
function liveitchina_field_formatter_settings_summary($field, $instance, $view_mode) {
  $display = $instance['display'][$view_mode];
  $type = $display['type'];
  $settings = $display['settings'];
  
  $summary = '<strong>Map:</strong> ' . $settings['map_dimensions'];
  switch ($type) {
   case 'geolocation_googlemaps_dynamic_text':
    $summary .= '<br />';
    $scrl = $settings['map_scrollwheel'] ? t('Yes') : t('No');
    $summary .= '<strong>Scrollable:</strong> ' . $scrl . '<br />';
    break;
  }
  $summary .= '<strong>Type:</strong> ' . $settings['map_maptype'] . '<br />';
  $summary .= '<strong>Zoom:</strong> ' . $settings['map_zoomlevel'];
  if (!empty($settings['marker_icon'])) {
   $vars = array(
     'path' => $settings['marker_icon'],
   );
   $summary .= '<br /><strong>Icon:</strong> ' . theme('image', $vars);
  }
  return $summary;

}

/**
 * Implements hook_field_formatter_prepare_view().
 *
 */
function liveitchina_field_formatter_prepare_view($entity_type, $entities, $field, $instances, $langcode, &$items, $displays) {
  if ($field['type']== 'taxonomy_term_reference'){
    return taxonomy_field_formatter_prepare_view($entity_type, $entities, $field, $instances, $langcode, $items, $displays);
  }
}
//*/
/**
 * Implements hook_field_formatter_view().
 */
function liveitchina_field_formatter_view ($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();
  $language = i18n_language_interface();
  $settings = $display['settings'];
  $element = array();

  switch ($display['type']) {
    case 'taxonomy_term_comma_separated':
      $terms = array();
      foreach ($items as $delta => $item) {
        $name = ($item['tid'] != 'autocreate' ? i18n_taxonomy_term_name($item['taxonomy_term'], $language->language): $item['name']);
        $terms[] = check_plain($name);
      }
      $element[] = array(
        '#markup' => implode(', ', $terms),
      );
    break;
    case 'geolocation_address':
      foreach ($items as $delta => $item) {
        $latlon = $item['lat'] . ',' . $item['lng'];
        $geoLocation = liveitchina_reverse_geocode($latlon);
        $element[$delta]['#markup'] = '<p>' . $geoLocation['formatted_address'] . '</p>';
      }
    break;
    case 'geolocation_googlemaps_dynamic_text':
      $info = entity_get_info($entity_type);
      $key = isset($info['entity keys']['name']) ? $info['entity keys']['name'] : $info['entity keys']['id'];
      $eid = $entity->$key;
     
      foreach ($items as $delta => $item) {

         $width = strtok($settings['map_dimensions'], 'x') . "px";
         $height = strtok('') . "px";
          
         $id = 'geolocation-googlemaps-dynamic-' . 'e_' . $eid . 'i_' . $instance['id'] . '-d_' . $delta;
         $map_element['googlemap'] = array(
           '#prefix' => '<div id="' . $id . '" class="geolocation-map geolocation-googlemaps-dynamic" ' . ' style="width:' . htmlentities($width) . ';height:' . htmlentities($height) . ';">',
           '#suffix' => '</div>',
         );
          
         // Attach CSS and JS files via FAPI '#attached'.
         $map_element['googlemap']['#attached']['css'][] = drupal_get_path('module', 'geolocation_googlemaps') . '/geolocation_googlemaps.css';
         $map_element['googlemap']['#attached']['js'][] = array(
           'data' => 'http://maps.google.com/maps/api/js?sensor=false',
           'type' => 'external',
         );
         $map_element['googlemap']['#attached']['js'][] = array(
           'data' => 'http://www.google.com/jsapi',
           'type' => 'external',
         );
         $map_element['googlemap']['#attached']['js'][] = array(
           'data' => drupal_get_path('module', 'geolocation_googlemaps') . '/geolocation_googlemaps_dynamic_formatter.js',
           'type' => 'file',
           'scope' => 'footer',
         );
          
         // Add each delta to the settings array.
         $data = array(
           'formatters' => array(
             'e_' . $eid . 'i_' . $instance['id'] => array(
               "settings" => $settings,
               "deltas" => array(
                 'd_' . $delta => array(
                   'lat' => $item['lat'],
                   'lng' => $item['lng'],
                 ),
               ),
             ),
           ),
         );
          
         $map_element['googlemap']['#attached']['js'][] = array(
           'data' => array('geolocationGooglemaps' => $data),
           'type' => 'setting',
         );
         
         $latlon = $item['lat'] . ',' . $item['lng'];
         $geoLocation = liveitchina_reverse_geocode($latlon);
         $formattedAddress = (isset($geoLocation['formatted_address']))? $geoLocation['formatted_address'] : '';
         $map_element['address']['#markup'] = '<p>' . $formattedAddress . '</p>';
         $map_element['address']['#weight'] = -1;
         
         $element[$delta] = $map_element;
      }
      break;
  }
  return $element;
}

/**
 * Implements hook_block_info().
 */
function liveitchina_block_info() {
  $blocks['liveitchina_footer'] = array(
    'info' => t('Liveitchina Footer'),
    'cache' => DRUPAL_CACHE_PER_ROLE,
  );
  $blocks['account'] = array(
    'info' => t('My Account'),
    'cache' => DRUPAL_NO_CACHE,
  );
  $blocks['account_menu'] = array(
    'info' => t('Account Menu'),
    'cache' => DRUPAL_NO_CACHE,
  );
  $blocks['login_user'] = array(
    'info' => t('Login Module Block'),
    'cache' => DRUPAL_NO_CACHE,
  );
  $blocks['todays_promotion'] = array(
    'info' => t('Featured promotions'),
    'cache' => DRUPAL_CACHE_PER_PAGE,
  );
  $blocks['share_this'] = array(
    'info' => t('Sharethis Footer'),
    'cache'=> DRUPAL_CACHE_PER_PAGE,
  );
  $blocks['lic_search_info'] = array(
    'info' => t('Current search information'),
    'cache' => DRUPAL_NO_CACHE,
  );

  return $blocks;
}

/**
 * Implements hook_theme().
 */
function liveitchina_theme($existing, $type, $theme, $path) {
  return array(
    'liveitchina_account' => array(
      'template' => 'liveitchina-account',
      'variables' => array('complete_data' => NULL),
    ),
    'liveitchina_review_info' => array(
      'template' => 'liveitchina-review-info',
      'variables' => array('data' => NULL),
    ),
    'liveitchina_display_teaser'=> array(
       'template' => 'liveitchina-display-teaser',
       'variables'=> array('data'=> NULL),
    ),
  );
}

/**
 * Implements hook_block_view().
 * 
 * Prepares the contents of the block.
 */
function liveitchina_block_view($delta = '') {

  switch ($delta) {
    case 'liveitchina_footer':
      $block['content'] = t('Copyright &copy; 2011 Live it China. All Rights Reserved.');//print_r($footer_menu, true);//render($footer_menu);
      break;
    case 'account':
      $block['content'] = liveitchina_account_block();
      break;
    case 'account_menu':
      $block['content'] = liveitchina_account_menu_block();
      break;
    case 'login_user':
      $block['subject'] = t('Members Login');
      $block['content'] = drupal_get_form('user_login_block');
      break;
    case 'todays_promotion':
      $block['content'] = '<h4 class="featured-promotions-block-title">' . t("Today's Promotions") . '</h4>';
      break;
    case 'share_this':
      $block['content'] = '<ul class="share">
        <li>
          <span  class="st_facebook_large"></span>
          <span  class="st_twitter_large"></span>
          <span  class="st_email_large"></span>
          <span  class="st_sina_large"></span>
        </li>
      </ul>
      <div class="push"></div>
      <script type="text/javascript">var switchTo5x=true;</script>
      <script type="text/javascript" src="http://w.sharethis.com/button/buttons.js"></script>
      <script type="text/javascript">stLight.options({publisher:"fc9c6124-783e-462c-b6f2-946cadffd8a3"});</script>';
      break;
    case 'lic_search_info':
      //$block['subject'] = t('Searching...');
      $block['content'] = '';
      $search_page = apachesolr_search_page_load('core_search');
      $apachesolr_has_searched = apachesolr_has_searched($search_page->env_id);
      $searcher = NULL;

      if ($apachesolr_has_searched) {
        $query = apachesolr_current_query($search_page->env_id);
        $searcher = $query->getSearcher();
        $q = $query->getParam('q');
        $block['content'] = t('Browsing') . ' "<strong>' . $q . '</strong>"';
        if (isset($_GET['loc'])){
          $block['content'] .= ' ' . t('in') . ' <strong>'. $_GET['loc'] . '</strong>';
        }
      }
      break;
  }

  return $block;
}

function liveitchina_account_menu_block(){
  global $user;
  if (!user_is_logged_in()){
    return '';
  }
  $user_fields = profile2_load_by_user($user, 'user');
  
  if ($firstname = field_get_items('profile2', $user_fields, 'field_user_first_name')){
    $firstname = array_pop($firstname);
    $firstname = $firstname['value'];
  } else {
    $firstname = '';
  }
  
  $items = array();
  $items[] = array(
    'data' => l(t('Welcome, ') . $firstname, '', 
      array('fragment' => ' ',
      'external' =>  TRUE,
      'attributes' => array(
      'class' => 'show-menu')
      )),
    'class' => array('dummy'=>'children'),
    'id' => 'display-menu',
    'children' => array(
      l('Account Settings', 'user/'. $user->uid.'/edit'),
      l('Privacy Settings', 'user/'. $user->uid.'/edit', array('fragment'=>'privacy-settings')),
      l('Help', $_GET['q'], array('fragment'=>'main-content')),
      l('Log Out', 'user/logout')
    )
  );
  
  $data = theme('item_list',
    array('items' => $items,
      'attributes' => array('class' => array('account-menu'))
    )
  );
  return $data;
}


/**
 * My Account block.
 */
function liveitchina_account_block() {
  global $user;

  $block = '';
  /* data defaults */
  $data = array(
    'uid' => $user->uid,
    'user_picture' => '',
    'user_full_name' => $user->name,
    'user_location' => '',
    'pcp_percentage' => '',
    'user_role' => '',
    'liveitchina_menu' => '',
    'liveitchina_menu_rendered' => '',
  );

  if ($user->uid > 0) {
    $menu = array();
    $user_role = '';
    $pcp_percentage = '';
    
    $user_data = profile2_load_by_user($user, 'user');
    $data['profile_data'] = $user_data;

    $data['user_picture'] = l(_liveitchina_ds_field_user_photo($user, 'thumbnail'),'profile-user/'. $user->uid. '/edit', array('html'=> true));
    //$first_name = field_get_items('profile2', $user_data, 'field_user_first_name');
    $data['user_full_name'] = '';//$first_name[0]['value'];

    $pcp_percentage = pcp_get_complete_percentage_data('profile2', 'user', $user);
    $data['pcp_percentage'] = theme('pcp_template', $pcp_percentage);
    $menu[] = array(
      'data' => l(t('My Profile'), 'profile-user/'. $user->uid),
      'class' => array('leaf'),
    );
    $menu[] = array(
        'data' => l(t('Account Settings'), 'user/'. $user->uid . '/edit'),
        'class' => array('leaf'),
    );
    /*
    $menu[] = array(
      'data' => l(t('Edit my account'), 'user/' . $user->uid . '/edit'),
      'class' => array('leaf'),
    );
    */
    $count_msg = privatemsg_unread_count();
    if ($count_msg > 0) {
      $inbox_msg =  format_plural($count_msg, 'Inbox (1 message)', 'Inbox (@count messages)');
    }
    else {
      $inbox_msg = t('Inbox');
    }
    $menu[] = array(
      'data' => l($inbox_msg, 'messages'),
      'class' => array('leaf'),
    );
    $menu[] = array(
      'data' => l(t('My Connections'), "user/$user->uid/connections"),
      'class' => array('leaf','collapsible'),
      'children' => array(
        l(t('Sent Requests'), "user/{$user->uid}/connections/sent"),
        l(t('Pending Requests'), "user/{$user->uid}/connections/received"),
      ),
    );
    $menu[] = array(
        'data' => l(t('My Reviews'), "user/$user->uid/reviews/my-review"),
        'class' => array('leaf'),
    );
    
    $menu[] = array(
      'data' => l(t('My Promotions'), 'promotions'),
      'class' => array('leaf'),
    );
    
    $menu[] = array(
      'data' => l(t('Bookmarks'), 'user/bookmarks'),
      'class' => array('leaf'),
    );

    $data['liveitchina_menu'] = $menu;
    $data['liveitchina_menu_rendered'] = theme('item_list', array('items' => $menu, 'attributes' => array('class' => array('menu'))));
  }
  return theme('liveitchina_account', $data);
}

function _liveitchina_location(){
  $machine_name = 'liveitchina_city';
  $v = taxonomy_vocabulary_machine_name_load($machine_name);
  $options['all'] = t('All');
  
  $terms = taxonomy_get_tree($v->vid, 0, 1);
  foreach ($terms as $term) {
    $opt_query = array ('f' => array('city:'.$term->tid));
    $options[serialize($opt_query)] = t($term->name);
  }
  return $options;
}

function _liveitchina_ds_sharethis($field){
  $content = '<div class="liveitchina-sharethis-link">'.l('Share This', $_GET['q'], array(
    'attributes' => array('class'=>array('liveitchina-sharethis')),
  ));
  $content .= sharethis_block_contents();
  $content .= '</div>';

  return $content;
}

function _liveitchina_ds_reviewer_author($field){
  $entity = $field['entity'];
  $author = user_load($entity->uid);
 /*/$picture = print_r($author, true);
  $userPicture = $author->picture;
 $picture =  l(
   theme('image_style',
     array('style_name' => 'profile_main',
       'path' => $userPicture->uri)
   ),
   'user/'.$entity->uid,
   array('html' => TRUE)
 );//*/
  return '<strong class="title">'. l($author->realname, 'user/'.$entity->uid ) .'</strong> '. t('says');
}

function _liveitchina_ds_entity_details($field){
  $entity = $field['entity'];
  //print_r($entity);exit;
  $profile_role_relationship = variable_get('profile_role_relationship', array());
  $userDetails = array(
    'image'=>'',
    'name' => '',
    'path' =>'',
    'profile' => '',
    'entity'=>'',
  );

  $picture = '';
  $image = '';

  if ($field['bundle'] == 'school'){
    $school = node_load($entity->entity_id);
    //$userid = $school->uid; 
    //$user_info($userid);
    //$userDetails['entity'] = $school;
    $image = $school->field_logo['und'][0]['uri'];
    $userDetails['name'] = $school->title;
    $userDetails['path'] = 'node/'. $school->nid;
    $userDetails['image'] =  
    $userDetails['profile'] =  t('School');
  }
  else {
    if ($value = $entity->field_user_reference['und'][0]['value']) {
      $user_info = user_load($value);
      $picture = $user_info->picture;
      $userDetails['name'] = $user_info->realname;
      $userDetails['path'] = 'profile-'. $entity->bundle .'/'. $user_info->uid; 
      $image = $picture->uri;

      $userDetails['profile'] =  $profile_role_relationship[$entity->bundle]['name'];
      //$userDetails['entity'] = $entity;
    }
  }
  
  if ($image != '') {
    $userDetails['image'] =  theme('image_style',
      array('style_name' => 'thumbnail',
        'path' => $image)
    );
  }

  return theme('liveitchina_review_info', $userDetails);
}


function liveitchina_ds_field_theme_functions_info() {
  return array('theme_liveit_list_field' => t('List comma separated'));
}


function theme_liveit_list_field($variables) {
  $output = '';

  $config = $variables['ds-config'];

  // Add a simple wrapper.
  $output .= '<div class="field-label-inline field field-name-' . strtr($variables['element']['#field_name'], '_', '-') . ' clearfix">';

  // Render the label.
  if (!$variables['label_hidden']) {
    $output .= '<div class="field-label label-' . $variables['element']['#label_display'] . '">' . $variables['label'];
    if (!isset($config['lb-col'])) {
      $output .= ':&nbsp;';
    }
    $output .= '</div>';
  }

  // Render the items.
  $items = array();
  foreach ($variables['items'] as $item) {
    $items[]= drupal_render($item);
  }
  if ($items) {
    $output .= '<div class="field-items">';
    $output .= implode(', ', $items);
    $output .= '</div>';
  }
  $output .="</div>";

  return $output;
}
//*/
 /**
 * Implements hook_node_view().
 */
function liveitchina_node_view($node, $view_mode, $langcode) {
  if (isset($node->content['my_additional_field'])){
    $node->content['my_additional_field']['#prefix'] = '<div class="sharethis-button">';
    $node->content['my_additional_field']['#suffix'] = '</div>';
  }
}

/**
 * Implements hook_user_insert().
 */
function liveitchina_user_insert(&$edit, &$account, $category = NULL) {
  $profile_partner = profile2_create(array('user' => $account, 'type' => 'exchange_partner'));
  profile2_save($profile_partner);

  $profile_tutor = profile2_create(array('user' => $account, 'type' => 'tutor'));
  profile2_save($profile_tutor);
  
  $profile = profile2_create(array('user' => $account, 'type' => 'user'));
  $profile->field_user_first_name['und'][0]['value'] = $account->first_name;
  $profile->field_user_last_name['und'][0]['value'] = $account->last_name;
  profile2_save($profile);
}

/**
 * Implements hook_entity_info_alter().
 */
function liveitchina_entity_info_alter(&$entity_info) {
  $entity_info['profile2']['view modes']['promotions'] = array(
    'label' => t('Promotions'),
    'custom settings' => TRUE,
  ); 
  $entity_info['profile2']['view modes']['display'] = array(
    'label' => t('Custom Display'),
    'custom settings' => TRUE,
  );
  $entity_info['node']['view modes']['custom_teaser'] = array(
      'label' => t('Custom Teaser'),
      'custom settings' => TRUE,
  );
  $entity_info['node']['view modes']['display'] = array(
    'label' => t('Custom Display'),
    'custom settings' => TRUE,
  );
}

/**
 * Implements hook_preprocess_node()
 */
function liveitchina_preprocess_node(&$vars) {
  $node = $vars['node'];
  $vars['theme_hook_suggestions'][] = 'node__' . $node->type;
  $vars['theme_hook_suggestions'][] = 'node__' . $node->type . '__' . $vars['view_mode'];
  //print_r($vars);
}

/**
 * Implements hook_preprocess_block()
 */
function liveitchina_preprocess_block(&$vars) {
  /*/$block = $vars['block'];
  //print "<h1>$block->bid</h1>";
  
  switch ($block->bid){
    case 'sharethis_block':
      print_r($vars);
      exit;
    break;
  }
  //*/
}

function _liveitchina_ds_page_title($field) {
  return '<h1 id="page-title" class="title">'. t("Today's News and Happenings") .'</h1>';
}

function _liveitchina_ds_submitted_by($field) {
  $node = $field['entity'];
  $user = ($node);
  $real_name = realname_load($user);
  $names = explode(' ', $real_name);
  if ( ($arr = count($names)) > 1){
    $real_name = substr($names[0], 0, 1) . '. ' . $names[$arr-1]; 
  }
  return t('Posted by !AUTHOR, !DATE', array('!AUTHOR'=> $real_name, '!DATE'=> date('F d, Y', $node->created)));
}

/*
 * Compute for the average rating of the profile and save it to the overall rating of the profile.
 */
function liveitchina_cast_review_vote_submit($form, &$form_state) {
  $values = $form_state['values'];
  $entity_id = $values['entity_id'];
  $entity_type = $values['entity_type'];
  $lang = 'und';//$values['language'];
  $total_rating = 0;
  $counter = 1;
  $flag = FALSE;

  while (isset($form_state['values']['field_rating'.$counter][$lang][0]['rating'])){
    $total_rating += $form_state['values']['field_rating'.$counter][$lang][0]['rating'];
    $counter++;
    $flag = TRUE;
  }

  //terminate if no field ratings
  if (!$flag){
    return FALSE;
  }

  $total_rating = $total_rating / ($counter-1);

  $form_state['values']['field_rating'][$lang][0]['rating'] = $total_rating;
  $votes = array(
    'entity_type' => $entity_type,
    'entity_id' => $entity_id,
    'value_type' => 'percent',
    'value' => $total_rating,
  );
  votingapi_add_votes($votes);
  $voting_cache = votingapi_recalculate_results($entity_type, $entity_id, true);
  $total_vote_rate = 0;
  foreach ($voting_cache as $vote){
    if ($vote['function'] == 'average'){
      $total_vote_rate = $vote['value'];
    }
  }
  if ($entity_type == 'profile2'){
    $entity = entity_load($entity_type, array($entity_id));
    $profile = $entity[$entity_id];
    $profile->field_rating[$lang][0]['average'] = $total_vote_rate;
    $profile->save();
  }
  if ($entity_type == 'node'){
    $node = node_load($entity_id);
    $node->field_rating[$lang][0]['average'] = $total_vote_rate;
    //use the node save to trigger the apachesolr indexer
    node_save($node);
    //field_attach_presave($entity_type, $node);
    //field_attach_update($entity_type, $node);
  }
}

/**
 * Process a block search form submission.
 */
function liveitchina_search_box_form_submit($form, &$form_state) {
  if (isset($_GET['destination'])) {
    unset($_GET['destination']);
  }

  if ($form_state['values']['search_block_form'] == '') {
    form_set_error('keys', t('Please enter some keywords.'));
  }

  $form_id = $form['form_id']['#value'];
  $info = search_get_default_module_info();
  $filter = array();

  if ($info) {
    if ($form_state['values']['location'] != 'all'){
      //$filter = array('query' => unserialize($form_state['values']['location']));
      $location = $form_state['values']['location'];
      //print_r($test);exit;
      $filter = array('query' => array('loc'=>$location));
      //print_r($filter);exit;
    }
    $form_state['redirect'] = array('search/' . $info['path'] . '/' . trim($form_state['values'][$form_id]), $filter);
  }
  else {
    form_set_error(NULL, t('Search is currently disabled.'), 'error');
  }
}

function _liveitchina_add_picture_to_user($form, &$form_state){
  global $user;
  if (isset($form_state['profile2']->field_profile_picture['und']['0']['fid'])){
    $file = file_load($form_state['profile2']->field_profile_picture['und']['0']['fid']);
    //$account = new stdClass();
    //$account->uid = $user->uid;
    $edit = array();
    $edit['picture'] = $file;
  
    //drupal_set_message(print_r($account,true));
    user_save($user, $edit);
  }
}

/**
 * Page callback
 */
function liveitchina_user_connectivity_page($form, &$form_state, $connection, $relationship) {
  $form = array();
  $form['header']['#markup'] = 'This';
  return $form;
}
/**
 * Ajax handler function that is utilized to display the form
 * in a popup rather than having the full page reload for the users
 */
function liveitchina_user_relationships_ui_request_ajax($requestee) {
  $form = drupal_get_form('liveitchina_user_relationships_ui_request', $requestee);
  if (isset($_GET['ajax'])) {
    print drupal_render($form);
  }
  else {
    return $form;
  }
}

function liveitchina_fivestar_widgets() {
  $path = drupal_get_path('module', 'liveitchina');
  $widgets = array();
  $widgets = array(
    $path . '/widget/star/star.css' => 'Star',
  );
  
  return $widgets;
}

function liveitchina_facetapi_map_price($value){
  $cost = array(0 => '' , 1 => '$', 2 => '$$', 3 => '$$$', 4 => '$$$$', 5 => '$$$$$');
  return (array_key_exists($value, $cost))? $cost[$value]: '';
}

function liveitchina_privatemsg_thread_operations_alter(&$operations) {
  $operations['mark as read']['button'] = TRUE;
  $operations['mark as unread']['button'] = TRUE;
  $operations['archive']['button'] = TRUE;
}

function _liveitchina_ds_field_user_photo($field, $style_name ='profile_main') {
  //*
  if (is_array($field)){
    $user = user_load($field['entity']->uid);
  }
  else {
    global $user;
  }

  $user_picture = array(
      'style_name' => $style_name,
      'path' => '',
      'alt' => '',
  );

  //$user_data = profile2_load_by_user($user, 'user');
  if (isset($user->picture) && $user->picture) {
    if ($user->picture){
      $file = file_load($user->picture);
      $user_picture['path'] = $file->uri;
    }
    else {
      $user_picture['path'] = $user->picture->uri;
    }
    $user_picture['alt']  = (isset($user->realname))? $user->realname : $user->name;
    }
    else {
      $avatar = field_info_field('field_user_avatar');
      $file = file_load($avatar['settings']['default_image']);
      $user_picture['path'] = $file->uri;
    }
  return theme('image_style', $user_picture);
  //*/
  //return '';
}

/*
 * Alter Facet Filter Area Block
*/
function liveitchina_block_view_facetapi_VOJ9ksCUAL6pTreW03urQ6m89C59IxTG_alter(&$data, $block) {
  $data['subject'] = t('Division'). ':';
  $hide = TRUE;
  $searchCity = (isset($_GET["f"])) ? $_GET["f"] : array();
  foreach ($searchCity as $city){
    list($searchLabel, $searchValue) = explode(":", $city);
    //display only if the value is HONGKONG;
    if (strtolower($searchLabel) == "city" && $searchValue == 158){
      $hide = FALSE;
    }
  }
  if ($hide){
    unset($data['content']);
  }
}

/*
 * Alter Facet Filter District Block
 */
function liveitchina_block_view_facetapi_wOER33SIuigH29qN7r2xP6n0omobQ4Nf_alter(&$data, $block) {
  $hide =TRUE;
  $data['subject'] = t('District') . ':';
  $searchCity = (isset($_GET["f"])) ? $_GET["f"] : array();
  foreach ($searchCity as $city){
    list($searchLabel, $searchValue) = explode(":", $city);
    if (strtolower($searchLabel) == "city"){
      $hide = FALSE;
    }
  }
  if ($hide){
    unset($data['content']);
  }
}
function liveitchina_block_view_facetapi_ei3dzp0dyuo0stcqfhqdg0cf9wbos12j_alter(&$data, $block) {
  $data['subject'] = t('Neighborhood'). ':';
}
function liveitchina_block_view_facetapi_uo4i5qq1rkinwo0vs1ao9ymwvpskhr6q_alter(&$data, $block) {
  $data['subject'] = t('Distance'). ':';
}
function liveitchina_block_view_facetapi_3IHTw7DdTZX1DkaTSxdUQpWnwQJGuBIx_alter(&$data, $block) {
  $data['subject'] = t('Language'). ':';
}
function liveitchina_block_view_facetapi_GiIy4zr9Gu0ZSa0bumw1Y9qIIpIDf1wu_alter(&$data, $block) {
  $data['subject'] = t('Method'). ':';
}

function _liveitchina_get_map($address){
  $point = geocoder('google',$address);
  if (!is_object($point)){
    return;
  }
    $geoJSON = $point->out('json');
    $coordinates = json_decode($geoJSON);
    $long = $coordinates->coordinates[0];
    $latitude = $coordinates->coordinates[1];

  $geofield = array(
    'wkt' => 'POINT ('. $long . ' '. $latitude .')',
    'geo_type' => 'point',
    'lat' => $latitude,
    'lon' => $long,
    'top' => $latitude,
    'bottom' => $latitude,
    'right' => $long,
    'left' => $long,
  );
  return $geofield;
}

/*
 * Function to retrieve the information of a single item field
 */
function _liveitchina_field_get_field($entity_type, $entity, $field, $index='value'){
  $value = '';
  if ($field_name = field_get_items($entity_type, $entity, $field)){
    $field_data = array_pop($field_name);
    $value = $field_data[$index];
  }

  return $value;
}

function _liveitchina_price_table($city, $cost = 0){
  if ($city == 0 || $cost == ''){
    return '-';
  }

  $sign = (in_array($city, array(158, 193)))? 'HK': 'RMB';

  $currency = array(
    'HK' => array(
      '0'=> '-',
      '1'=> '$ (0-100 HK$)',
      '2'=> '$$ (101-150 HK$)',
      '3'=> '$$$ (151-250 HK$)',
      '4'=> '$$$$ (251-350 HK$)',
      '5'=> '$$$$$$ (350+ HK$)',
    ),
    'RMB' => array(
      '0'=> '-',
      '1'=> '¥ (0-50 RMB¥)',
      '2'=> '¥¥ (51-100 RMB¥)',
      '3'=> '¥¥¥ (101-150 RMB¥)',
      '4'=> '¥¥¥¥ (151-250 RMB¥)',
      '5'=> '¥¥¥¥¥ (251+ RMB¥)',
    ),
  );
  return $currency[$sign][$cost];
}

function liveitchina_profile_core($profile){
  $name = $profile->field_user_first_name['und'][0]['value'];
  $requestee = $profile->uid;
  $connect_url = "relationship/{$requestee}/request/6";
  $links[] = array(
    'data' => l(t('Send Message'), "messages/new/{$profile->uid}"),
  );
  $links[] = array(
    'data' => l(t('Connect'), $connect_url),
  );
  $links[] = array(
    'data' => l(t("@name's Review", array('@name'=>$name)), "user/{$profile->uid}/reviews"),
  );
  $data = theme('item_list',
    array('items' => $links,
      'attributes' => array(
        'class' => array(
          'user-actions',
          'clearfix'
        ),
      ),
    )
  );
  print $data;
}
/**
 * Implements hook_ds_view_modes_info().
 */
function liveitchina_ds_view_modes_info() {
  $ds_view_modes = array();
  $ds_view_mode = new stdClass;
  $ds_view_mode->disabled = FALSE;
  $ds_view_mode->api_version = 1;
  $ds_view_mode->view_mode = 'my_reviews';
  $ds_view_mode->label = 'My Reviews';
  $ds_view_mode->entities = array(
    'node' => 'node',
    'reply' => 'reply',
    'profile2' => 'profile2',
  );
  $ds_view_modes['my_reviews'] = $ds_view_mode;
  
  return $ds_view_modes;
}

/**
 * Implements hook_hook_info().
 */
function liveitchina_hook_info() {
  $hooks['menu'] = array(
    'group' => 'menu',
  );
  $hooks['menu_alter'] = array(
    'group' => 'menu',
  );
  $hooks['ds_layout_info'] = array(
    'group' => 'ds_fields_info',
  );
  return $hooks;
}

/**
 * Implements theme_preprocess_replies().
 */
function liveitchina_preprocess_replies(&$vars) {
  $vars['reply_form']['#access'] = FALSE;
  $vars['links']['#access']= FALSE;
}

function liveitchina_field_widget_info_alter(&$info) {
  $path = drupal_get_path('module', 'liveitchina');
  $info['stars']['settings']['widget']['fivestar_widget'] = $path . '/widget/star/star.css';
}

function user_relationships_is_connected($requester, $requestee, $rtid){
  if (!is_object($requester) || $requester->uid == 0){
    return FALSE;
  }
  else {
    $requester_id = $requester->uid;
  }

  $param = array(
    'requester_id' => $requester_id,
    'approved'=> TRUE,
    'between' => array($requester_id, $requestee),
    'rtid'=> array($rtid),
  );

  $ret = user_relationships_load(
             $param,
             array('count' => TRUE));
  return ($ret) ? TRUE: FALSE;
}

function liveitchina_get_connect_label($rel_id){
  $ret = '';
  switch ($rel_id){
    case 3:
      return LIC_TUTOR_REQUEST_LABEL;
    case 2:
      return LIC_EXPAT_REQUEST_LABEL;
    default:
      return 'Get Connected';
  }
 
}

/**
 * Reverse Geocode an address
 * Input can be a string or an array
 * Output is an array if successful, string if failed
 *
 * "OK" indicates that no errors occurred; the address was successfully parsed and at least one geocode was returned.
 * "ZERO_RESULTS" indicates that the geocode was successful but returned no results. This may occur if the geocode was passed a non-existent address or a latlng in a remote location.
 * "OVER_QUERY_LIMIT" indicates that you are over your quota.
 * "REQUEST_DENIED" indicates that your request was denied, generally because of lack of a sensor parameter.
 * "INVALID_REQUEST" generally indicates that the query (address or latlng) is missing.
 */
function liveitchina_reverse_geocode($latlng, $single = TRUE) {
  if (empty($latlng)) {
    return;
  }
  
  if (is_array($latlng)) {
    if (count($latlng)) {
      $latlng = implode(',', $latlng);
    }
    else {
      return;
    }
  }

  $query = array(
    'latlng' => $latlng,
    'sensor' => 'false'
  );

  $msg = '';
  $url = url("http://maps.googleapis.com/maps/api/geocode/json", array('query' => $query));
  $result = drupal_http_request($url);
  $data = json_decode($result->data);
  $status = $data->status;
  if ($status == 'OK'){
    //$address_components = $data->results[0]->address_components;
    //print_r($data->results); exit;
    $rows = array();
    $results = $data->results;
    $addressComponents = array();
    foreach ($results as $ind=>$result) {
      $out = array();
      $addressComponent = $result->address_components;
      foreach ($addressComponent as $component) {
      //print_r($component);exit;
        $type = $component->types[0];
        switch ($type) {
          case 'route':
            $out['route'] = $component->short_name;
            $out['address1'] = $component->long_name;
            break;
          case 'country':
            $out['country'] = $component->long_name;
            $out['country_short'] = $component->short_name;
            break;
          default:
            $out[$type] = $component->long_name;
        }
      }
      $out['formatted_address'] = $result->formatted_address;
      $out['location_type'] = $result->geometry->location_type;
      if ($single){
        return $out;
      }
      foreach ($out as $field=>$value){
        if (!isset($addressComponents[$field])){
          $addressComponents[$field] = $value;
        }
      }
    }
    return $addressComponents;
  }

  $msg = array(
    'ZERO_RESULTS' => 'No result',
    'OVER_QUERY_LIMIT' => 'Over query limit',
    'REQUEST_DENIED' => 'Request denied',
    'INVALID_REQUEST' => 'Request invalid',
  );
   return $msg[$status];
}

function _liveitchina_check_map_address($mapdetail){
  $txtMapdetail = unserialize($mapdetail);
  $mapFields = array(
    'street_address'=>'',
    'route'=>'',
    'intersection'=>'',
    'political'=>'',
    'country'=>'',
    'administrative_area_level_1'=>'',
    'administrative_area_level_2'=>'',
    'administrative_area_level_3'=>'',
    'colloquial_area'=>'',
    'locality'=>'',
    'sublocality'=>'',
    'neighborhood'=>'',
    'premise'=>'',
    'subpremise'=>'',
    'postal_code'=>'',
    'natural_feature'=>'',
    'airport'=>'',
    'park'=>'',
    'point_of_interest'=>'',
    'post_box'=>'',
    'street_number'=>'',
    'floor'=>'',
    'room'=>'',
  );
  
  $ret = '';
  if ($txtMapdetail){
    if (isset($txtMapdetail['sublocality'])){
      $ret = $txtMapdetail['locality'] . ', ' . $txtMapdetail['sublocality'];
    }
    else {
      $ret = $txtMapdetail['country'] . ', ' . $txtMapdetail['locality'];
    }
  }
  return $ret;
}