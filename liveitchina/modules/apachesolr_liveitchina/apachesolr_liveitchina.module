<?php
/**
 * Implementation of hook_preprocess_search_results().
 */
function apachesolr_liveitchina_preprocess_search_results(&$vars) {
  //global $user;
  if ($vars['search_page']->page_id == 'news_and_happenings'){
    drupal_add_css(path_to_theme() . '/ds_layouts/liveitchina_teaser/liveitchina_teaser.css', 'theme');
  }
}

/**
 * Implementation of hook_preprocess_search_result().
 */
function apachesolr_liveitchina_preprocess_search_result(&$variables) {
  $cost = array(0 => '' , 1 => '$', 2 => '$$', 3 => '$$$', 4 => '$$$$', 5 => '$$$$$');
  // If this search result is coming from our module, we want to improve the
  // template potential to make life easier for themers.
  $result = $variables['result'];
  $variables['theme_hook_suggestions'][] = 'search_result__'. $result['bundle'];
  $variables['cost'] = $cost[0];

  switch ($result['bundle']){
    case 'article':
    case 'video':
    case 'person_of_the_week':
    case 'photo':
      $variables['snippet'] = $result['fields']['ts_view_mode'];
    break;
  }
}

function _apachesolr_liveitchina_get_connect($result){
  global $user;
  $var = variable_get('profile_role_relationship', array());
  
  list(, $requestee) = explode('/', $result['fields']['path']);
  $requestee_obj = user_load($requestee);
  $relationship = $var[$result['bundle']]['rtid'];
  //$relationships = user_relationships_get_requestable_rtypes($user, $requestee_obj);

  $links = array();
  $entity_id = $result['fields']['entity_id'];
  $links[] = flag_create_link('profile', $entity_id);
  $rel = user_relationships_is_connected($user, $requestee, $relationship);
  $connect_label = liveitchina_get_connect_label($relationship);

  if ($rel){
    $connect_url = url('user/' . 'connectivity/' . $requestee . '/' . $relationship, array('absolute'=> TRUE));
    //$links[] = ctools_modal_text_button(t('Disconnect'), $connect_url, t('Disconnect'), 'ctools-modal-modal-popup-medium');
    $links[] = l(t('My '. $var[$result['bundle']]['name']),
                   $connect_url,
                   array('attributes'=> array('class'=> array('button-green'))));
  }
  else {
    $connect_url = url('connect/' . $requestee . '/request/'. $relationship, array('absolute'=> TRUE));
    //$links[] = ctools_modal_text_button(t('Connect'), $connect_url, t('Connect'), 'ctools-modal-modal-popup-medium');
    $links[] = l( t( $connect_label ), $connect_url);
  }

  $rendered_links = implode('', $links);
  return $rendered_links;
}

/*
 * Implements hook_facetapi_facet_info()
 */
function apachesolr_liveitchina_facetapi_facet_info(array $searcher_info) {
  $facets = array();
  $facets['filter_language'] = array(
    'label' => t('Language'),
    'description' => t('Filter by Language offered.'),
    'field' => 'filter_language',
    'field alias' => 'language',
    'field api name' => FALSE,
    'map callback' => 'facetapi_map_taxonomy_terms',
    'default widget' => 'facetapi_checkbox_links',
  );
  $facets['bundle'] = array(
    'label' => t('Method'),
    'description' => t('Filter by Method.'),
    'field' => 'bundle',
    'field alias' => 'method',
    'field api name' => 'bundle',
    'map callback' => 'apachesolr_liveitchina_facetapi_map_bundle',
    'default widget' => 'facetapi_checkbox_links',
  );
  $facets['distance'] = array(
    'label' => t('Distance'),
    'description' => t('Filter by Distance.'),
    'field alias' => 'distance',
    'field api name' => FALSE,
    'alter callbacks' => array('facetapi_map_liveitchina_distance'),
    'default widget' => 'facetapi_checkbox_links',
  );
  $facets['map_location'] = array(
    'label' => t('Map Location'),
    'description' => t('Filter by Location (Hardcoded)'),
    'field alias' => 'loc',
    'field api name' => FALSE,
    'alter callbacks' => array('facetapi_map_liveitchina_location'),
    'default widget' => 'facetapi_checkbox_links',
  );
  $facets['location'] = array(
    'label' => t('Location'),
    'description' => t('Filter by Location.'),
    'field' => 'ss_location',
    'field alias' => 'location',
    'field api name' => 'ss_location',
    'default widget' => 'facetapi_checkbox_links',
  );
  $facets['neighborhood'] = array(
    'label' => t('Neighborhoods'),
    'description' => t('Filter by Neighborhood.'),
    'field' => 'sm_filter_neighborhood',
    'field alias' => 'neighbor',
    'field api name' => 'neighborhood',
    'default widget' => 'facetapi_checkbox_links',
    //'alter callbacks' => array('facetapi_map_liveitchina_distance'),
  );
  return $facets;
}

/**
 * Map callback for bundle.
 */
function apachesolr_liveitchina_facetapi_map_bundle(array $values) {
  $map = array(
    'exchange_partner'=> t('Exchange Partner'),
    'tutor'=> t('Tutor'),
    'school'=> t('School'),
  );
  return $map;
}

function facetapi_map_liveitchina_distance(&$build, $adapter, $facet){
 /*
  $location = (isset($_GET['loc'])) ? $_GET['loc']:'';
  if ($coordinates = _liveitchina_get_map($location)){
    $coordinate = $coordinates['lat'].','.$coordinates['lon'];
  }
*/
  $options = array(
    '20' => t("Bird's-eye View"),
    '5' => t('Metro (5 km)'),
    '2' => t('Biking (2 km)'),
    '1' => t('Walking (1 km)'),
  );
  
  foreach ($options as $ind=>$opt){
    //$value = '{!geofilt sfield=coordinates pt='.$coordinate.' d='.$ind.'}';
    $build[$ind] = array(
     '#markup'=> $opt,
     '#count'=> NULL,
    );
  }
}

function facetapi_map_liveitchina_location(&$build, $adapter, $facet){
  $options = array(
    'Hong Kong',
    'Shenzhen',
    'Macau',
    'Zhuhai',
    'Guangzhou',
  );

  foreach ($options as $opt){
    $build[$opt] = array(
      '#markup'=> t($opt),
      '#count'=> NULL,
    );
  }
}
/**
 * Map callback for bundle.
 */
function apachesolr_liveitchina_facetapi_cost_bundle(array $values) {
  $cost = array(
    0 => '' ,
    1 => '$',
    2 => '$$',
    3 => '$$$',
    4 => '$$$$',
    5 => '$$$$$'
  );
  return array_intersect_key($cost, array_flip($values));
}

/*
 * Reindex profile if profile save
* */
function apachesolr_liveitchina_user_update(&$edit, $account, $category) {
  $table = apachesolr_get_indexer_table('profile2');
  $profiles = profile2_load_by_user($account);
  foreach ($profiles as $profile) {
    switch (db_driver()) {
      case 'mysql' :
        $table = db_escape_table($table);
        $query = "UPDATE {{$table}} pi
        SET pi.changed = :changed
        WHERE pi.entity_id = :pid";
        $result = db_query($query, array(':changed' => REQUEST_TIME,
            ':pid' => $profile->pid,
        ));
        break;
      default :
        $update = db_update($table)
          ->condition('entity_id', array($profile->pid), 'IN')
          ->fields(array('changed' => REQUEST_TIME))
          ->execute();
    }
  }
}

function apachesolr_liveitchina_profile2_update($profile) {
  if ($profile->type == 'user'){
    $empty = array();
    apachesolr_liveitchina_user_update($empty, $profile, 'account');
  }
}

//*/

/*
 *  Facet bonus
 *  
* */
function apachesolr_liveitchina_facet_items_alter(&$build, &$settings) {
  foreach($build as $key => $item) {
    if (isset($build[$key]["#count"])){
      $build[$key]["#count"] = NULL;
    }
  }
}

/**
 * Implements hook_facetapi_widgets().
 */
function apachesolr_liveitchina_facetapi_widgets() {
  return array(
    'apachesolr_liveitchina_facetapi_select' => array(
      'handler' => array(
        'label' => t('Select'),
        'class' => 'LiveitChinaFacetapiSelect',
        'query types' => array('term', 'date'),
      ),
    ),
    /*
    'apachesolr_liveitchina_facetapi_distance' => array(
      'handler' => array(
        'label' => t('Distance'),
        'class' => 'LiveitChinaFacetapiDistance',
        'query types' => array('apatial'),
      ),
    ),
    //*/
  );
}

/**
 * Implements hook_forms().
 *
 * Set callbacks for select facet forms.
 */
function apachesolr_liveitchina_forms() {
  $forms = array();
  foreach (facetapi_get_searcher_info() as $searcher => $searcher_info) {
    foreach (facetapi_get_facet_info($searcher) as $facet) {
      $forms['facetapi_select_' .  $facet['name']]['callback'] = 'facetapi_select_form';
    }
  }
  return $forms;
}

/**
 * Widget that renders facets as a list of select box.
 */
class LiveitChinaFacetapiSelect extends FacetapiWidget {
  /**
   * Overrides constructor to reset the key.
   */
  public function __construct($id, array $realm, FacetapiFacet $facet, stdClass $settings) {
    parent::__construct($id, $realm, $facet, $settings);
    $this->jsSettings['limit'] = $this->settings->settings['soft_limit'];
    $this->key = $facet['name'];
  }
  
  /**
   * Renders the form.
   */
  public function execute() {
    $element = &$this->build[$this->facet['field alias']];
    $arrSettings = explode(':', $this->build['#settings']->name);
    $name = array_pop($arrSettings);
    $element = drupal_get_form('facetapi_select_' .  $name, $element);
  }
}

/**
 * Generate form for facet.
 */
function facetapi_select_form($form, &$form_state, $elements) {

  // Build options from facet elements.
  $options = array('all' => t('- All -'));
  $default_value = '';
  foreach ($elements as $element) {
    if ($element['#active']) {
      $default_value = serialize($element['#query']);
    }
    $options[serialize($element['#query'])] = $element['#markup'];
  }

  if (count($options) == 1) {
    return;
  }
  
  $form['select'] = array(
      '#type' => 'select',
      '#options' => $options,
      '#attributes' => array('class' => array('ctools-auto-submit')),
      '#default_value' => $default_value,
  );
  $form['submit'] = array(
      '#type' => 'submit',
      '#value' => t('Filter'),
      '#attributes' => array('class' => array('ctools-use-ajax', 'ctools-auto-submit-click', 'element-hidden')),
      '#submit' => array('facetapi_select_form_submit'),
  );

  // Lets add autosubmit js functionality from ctools.
  $form['#attached']['js'][] = drupal_get_path('module', 'ctools') . '/js/auto-submit.js';
  // Add javascript that hides Filter button.
  $form['#attached']['js'][] = drupal_get_path('module', 'apachesolr_liveitchina') . '/js/facetapi-hide-submit.js';

  $form['#attributes']['class'][] = 'facetapi-widget-select-facet';

  return $form;
}

/**
 * Submit handler for facet form.
 */
function facetapi_select_form_submit($form, &$form_state) {
  $param = array();
  if ($form_state['values']['select'] != 'all') {
    $param = array('query' => unserialize($form_state['values']['select']));
  }
  $form_state['redirect'] = array($_GET['q'], $param);
}


function _apachesolr_liveitchina_index_map($item, &$document){
  $reverseGeocode = unserialize( $item );
  if (is_array($reverseGeocode)){
    foreach ($reverseGeocode as $geoInd=>$geoValue) {
      $document->addField("ts_mapapi_{$geoInd}", $geoValue );
      $document->addField("ss_mapapi_{$geoInd}", $geoValue );
      if (in_array($geoInd, $neighbors)){
        $document->addField('sm_filter_neighborhood', $geoValue );
      }
    }
    if (isset($reverseGeocode['sublocality'])){
      $document->addField("ss_location", $reverseGeocode['locality'] );
    }
    elseif(isset($reverseGeocode['country'])){
      $document->addField("ss_location", $reverseGeocode['country'] );
    }
  }
  $document->addField($fieldInfo['field'], $item);
}